<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="sdboard">

	<resultMap type="sdboardDto" id="sdboardMap">
		<result property="sdbseq" column="SDBSEQ" />
		<result property="sdbtabno" column="SDBTABNO" />
		<result property="sdbgroupseq" column="SDBGROUPSEQ" />
		<result property="sdbgroupno" column="SDBGROUPNO" />
		<result property="sdbfirstfolder" column="SDBFIRSTFOLDER" />
		<result property="sdbsecondfolder" column="SDBSECONDFOLDER" />
		<result property="sdbthirdfolder" column="SDBTHIRDFOLDER" />
		<result property="sdbimportance" column="SDBIMPORTANCE" />
		<result property="sdbtitle" column="SDBTITLE" />
		<result property="sduemail" column="SDUEMAIL" />
		<result property="sdbcontent" column="SDBCONTENT" />
		<result property="sdbregdate" column="SDBREGDATE" />
		<result property="sdbviews" column="SDBVIEWS" />
		<result property="sdblike" column="SDBLIKE" />
		<result property="sdbthumbnail" column="SDBTHUMBNAIL" />
		<result property="sdbimgpath" column="SDBIMGPATH" />
		<result property="sdbfilename" column="SDBFILENAME" />
		<result property="sdbfilepath" column="SDBFILEPATH" />
	</resultMap>

	<select id="selectAll" resultMap="sdboardMap">
		select * from SDBOARD
	</select>

	<select id="selectOne" parameterType="int" resultMap="sdboardMap">
		select * from SDBOARD where SDBSEQ = #{sdbseq}
	</select>


	<select id="selectDetail" resultMap="sdboardMap">
		select * from SDBOARD where SDBSEQ = #{sdbseq}
	</select>

	<!-- 전체 게시물 구하기 + 검색후 전체 게시물 구하기 -->
	<select id="getTotalBoard" resultType="int">
		select COUNT(*)
		from SDBOARD
		<trim prefix="WHERE" prefixOverrides="AND">
			<if
				test="category == 'title' and keyword != null and keyword != ''">
				AND SDBTITLE LIKE ('%' || #{keyword} || '%')
			</if>
			<if
				test="category == 'content' and keyword != null and keyword != ''">
				AND SDBCONTENT LIKE ('%' || #{keyword} || '%')
			</if>
			<if
				test="category == 'name' and keyword != null and keyword != ''">
				AND SDUEMAIL LIKE ('%' || #{keyword} || '%')
			</if>
		</trim>
	</select>

	<!-- 전체 가져오기 + 페이징 + 검색 -->
	<!-- # <trim> 1.prefix 처리 후 엘리먼트의 내용이 있으면 가장 앞에 붙여준다. 2.prefixOverrides 
		처리 후 엘리먼트 내용 중 가장 앞에 해당 문자들이 있다면 자동으로 지워준다. 3.suffix 처리 후 엘리먼트 내에 내용이 있으면 
		가장 뒤에 붙여준다. 4.suffixOverrides 처리 후 엘리먼트 내용 중 가장 뒤에 해당 문자들이 있다면 자동으로 지워준다. -->
	<select id="boardList" parameterType="sdboardDto"
		resultMap="sdboardMap">
		SELECT X.RN, X.SDBSEQ, X.SDUEMAIL, X.SDBTITLE, X.SDBCONTENT,
		X.SDBREGDATE, X.SDBLIKE
		FROM(
		SELECT ROWNUM as RN, A.SDBSEQ, A.SDUEMAIL, A.SDBTITLE, A.SDBCONTENT,
		A.SDBREGDATE, A.SDBLIKE
		FROM (
		SELECT SDBSEQ, SDUEMAIL, SDBTITLE, SDBCONTENT, SDBREGDATE, SDBLIKE
		FROM SDBOARD
		<trim prefix="WHERE" prefixOverrides="AND">
			<if
				test="category == 'title' and keyword != null and keyword != ''">
				AND SDBTITLE LIKE ('%' || #{keyword} || '%')
			</if>
			<if
				test="category == 'content' and keyword != null and keyword != ''">
				AND SDBCONTENT LIKE ('%' || #{keyword} || '%')
			</if>
			<if
				test="category == 'name' and keyword != null and keyword != ''">
				AND SDUEMAIL LIKE ('%' || #{keyword} || '%')
			</if>
		</trim>
		ORDER BY SDBSEQ DESC) A
		WHERE ROWNUM <![CDATA[<=]]>
		#{endBoardNo}) X
		WHERE X.RN >= #{startBoardNo}
	</select>


	<select id="getBoardNo" resultType="int">
		select SDBSEQ from SDBOARD where SDUEMAIL=#{sduemail} and
		SDBTHUMBNAIL=#{sdbthumbnail}
	</select>

	<insert id="insertImg" parameterType="sdboardDto">
		insert into SDBOARD(SDBSEQ,SDUEMAIL,SDBTHUMBNAIL,SDBIMGPATH)
		values(SDBSEQ.NEXTVAL,#{sduemail},#{sdbthumbnail},#{sdbimgpath})
	</insert>

	<insert id="insertBoardNoImg" parameterType="sdboardDto">
		insert into
		SDBOARD(SDBSEQ,SDBTITLE,SDUEMAIL,SDBCONTENT,SDBREGDATE,SDBTHUMBNAIL,SDBFILEPATH)
		values(SDBSEQ.NEXTVAL,#{sdbtitle},#{sduemail},#{sdbcontent},SYSDATE,#{sdbthumbnail},#{sdbfilepath})
	</insert>

	<update id="updateBoardYesImg" parameterType="sdboardDto">
		update SDBOARD set
		SDBTITLE=#{sdbtitle},SDBCONTENT=#{sdbcontent},SDBREGDATE=SYSDATE,SDBFILENAME=#{sdbfilename},SDBFILEPATH=#{sdbfilepath}
		where SDBSEQ =#{sdbseq}
	</update>
	
	<update id="updateImg" parameterType="sdboardDto">
		update SDBOARD set 
		SDBTHUMBNAIL=#{sdbthumbnail}, SDBIMGPATH=#{sdbimgpath}
		where SDBSEQ=#{sdbseq} and SDUEMAIL=#{sduemail}
	</update>

	<update id="updateNoImgBoard" parameterType="sdboardDto">
		update SDBOARD set 
		SDBSEQ=#{sdbseq}, SDBTITLE=#{sdbtitle}, SDBCONTENT=#{sdbcontent}, SDBREGDATE=SYSDATE, SDBTHUMBNAIL=null, SDBIMGPATH=null, SDBFILEPATH=#{sdbfilepath}
		where SDBSEQ=#{sdbseq} and SDUEMAIL=#{sduemail}
	</update>

	<update id="updatewrite" parameterType="sdboardDto">
		update SDBOARD set
		SDBTITLE=#{sdbtitle},SDBCONTENT=#{sdbcontent},SDBTHUMBNAIL=#{sdbthumbnail},SDBIMGPATH=#{sdbimgpath},SDBFILENAME=#{sdbfilename},SDBFILEPATH=#{sdbfilepath}
		where SDBSEQ =#{sdbseq}
	</update>


	<delete id="deletewrite" parameterType="int">
		delete from SDBOARD where SDBSEQ =#{sdbseq}
	</delete>

</mapper>